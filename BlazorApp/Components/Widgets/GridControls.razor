@typeparam TItem

<RadzenDataGridColumn TItem="TItem" Width="@Width">
	<Template>
		<RadzenButton ButtonStyle="ButtonStyle.Light" Icon="edit" Click="@(args => Grid.EditRow(context))" class="mr-2" />
		<RadzenButton Icon="delete" Click="@(args => OnDeleteRow(context))" />
	</Template>
	<EditTemplate>
		<RadzenButton ButtonStyle="ButtonStyle.Primary" Icon="save" Click="@((args) => Grid!.UpdateRow(context))" class="mr-2" />
		<RadzenButton ButtonStyle="ButtonStyle.Primary" Icon="cancel" Click="@((args) => Grid!.CancelEditRow(context))" />
	</EditTemplate>
</RadzenDataGridColumn>

@code {
	[Parameter, EditorRequired]
	public RadzenDataGrid<TItem> Grid { get; set; } = default!;

	[Parameter]
	public EventCallback<TItem> DeleteRow { get; set; }

	[Parameter]
	public string? Width { get; set; }

	async Task OnDeleteRow(TItem row)
	{
		var result = await Dialogs.Confirm("This will delete the row permanently.", "Delete Row");
		if (result.HasValue && !result.Value) return;

		await DeleteRow.InvokeAsync(row);
	}
}